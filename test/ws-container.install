#!/bin/sh
# update cockpit packages and install scripts in the container
set -eu

# keep in sync with containers/ws/install.sh
PACKAGES="
kdump
networkmanager
packagekit
selinux
sosreport
storaged
system
"

for rpm in ws bridge $PACKAGES; do
    rpm2cpio /var/tmp/cockpit-$rpm-*.rpm | cpio -i --make-directories --directory=/var/tmp/install
done

# HACK: Fedora CoreOS is already on Python 3.13, while Fedora-40 is Python3.12
if [ -d /var/tmp/install/usr/lib/python3.13/site-packages/cockpit ]; then
    mkdir -p /var/tmp/install/usr/lib/python3.12/site-packages/
    mv /var/tmp/install/usr/lib/python3.13/site-packages/cockpit /var/tmp/install/usr/lib/python3.12/site-packages/
fi

podman run --name build-cockpit -i \
    -v /var/tmp/:/run/build:Z \
    quay.io/cockpit/ws sh -exc '
cp -a /run/build/install/* /
cp /run/build/containers/ws/label-* /run/build/containers/ws/default-bastion.conf /run/build/containers/ws/cockpit-auth-ssh-key /container/
# done in containers/ws/install.sh; this can be removed once that change is in our VM images
rm -f /usr/libexec/cockpit-session
'
podman commit --change CMD=/container/label-run build-cockpit localhost/cockpit/ws
podman rm -f build-cockpit

# move original quay.io image away, to make sure that our tests use the updated one
podman tag quay.io/cockpit/ws:latest quay.io/cockpit/original-ws:released
podman rmi quay.io/cockpit/ws:latest
