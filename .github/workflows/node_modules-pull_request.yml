name: node_modules
on: pull_request

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      package_json: ${{ steps.package_json.outputs.result }}

    steps:
      - uses: actions/checkout@v2

      - name: Read package.json
        id: package_json
        uses: actions/github-script@v3
        with:
          script: return require('fs').readFileSync('package.json');
          result-encoding: string

      - name: Resolve and verify node_modules gitlink
        id: verify
        run: |
            set -ux
            node_modules="$(git rev-parse '${{ github.sha }}:node_modules')"
            test -n "${node_modules}"
            git fetch "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY%/*}/node-cache" "${node_modules}"
            git cat-file blob "${node_modules}:.package.json" > node_modules-package.json
            diff -u node_modules-package.json package.json

  rebuild:
    needs: check
    if: ${{ failure() && needs.check.outputs.package_json != '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Write package.json
        uses: actions/github-script@v3
        with:
          script: require('fs').writeFileSync("package.json", ${{ toJSON(needs.check.outputs.package_json) }});

      - name: Rebuild node_modules
        run: |
          set -ux

          exec >&2 # close workflow command channel

          container="$(docker create -u node -w /home/node node:14 npm install --ignore-scripts)"
          docker cp package.json "${container}:/home/node/package.json"
          docker start -a "${container}" 2>&1 | tee npm-install.log
          docker cp "${container}:/home/node/package.json" npm-package.json
          docker cp "${container}:/home/node/package-lock.json" package-lock.json
          docker cp "${container}:/home/node/node_modules" - > node_modules.tar
          docker rm -f "${container}"

      - name: Ensure no changes to package.json
        run: diff -u package.json npm-package.json

      - uses: actions/upload-artifact@v2
        name: Create artifact
        with:
          path: |
            npm-install.log
            package.json
            package-lock.json
            node_modules.tar
          retention-days: 1
