#!/usr/bin/python
# -*- coding: utf-8 -*-

# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

from testlib import *

class TestRealms(MachineCase):

    def testIpa(self):
        m = self.machine
        b = self.browser

        # TODO: Make this work with non-root
        b.default_user = "root"

        # Start the FreeIPA instance and use it as the DNS server
        #
        ipa = self.new_machine(flavor="ipa")
        ipa.start()
        ipa.wait_boot()

        m.execute("hostnamectl set-hostname x0.cockpit.lan")
        m.execute("echo -e 'domain cockpit.lan\nsearch cockpit.lan\nnameserver %s\n' >/etc/resolv.conf; chattr +i /etc/resolv.conf" % ipa.address)

        # Wait for DNS to work as expected.
        # https://bugzilla.redhat.com/show_bug.cgi?id=1071356#c11
        #
        wait(lambda: m.execute("nslookup -type=SRV _ldap._tcp.cockpit.lan"))

        self.login_and_go("realms")

        def wait_number_domains(n):
            b.wait_js_cond('$("#realms-list > li").length == ' + str(n))
            b.wait_dbus_prop('com.redhat.Cockpit.Realms', 'Busy', ",")

        wait_number_domains(0)

        # Join the default one
        b.click("#realms-join")
        b.wait_popup("realms-op")
        b.wait_visible("#realms-op-form")

	with b.wait_timeout(120):
	        b.wait_val("#realms-op-address", "cockpit.lan")
	        b.wait_val("#realms-op-admin", "admin")
	        b.set_val("#realms-op-admin-password", "foobarfoo")
	        b.click("#realms-op-apply")
	        b.wait_popdown("realms-op")

	        # Check that this has worked
	        wait_number_domains(1)

        # Leave the domain
        b.click("#realms-leave-0")
        wait_number_domains(0)

        # Send a wrong password
        b.click("#realms-join")
        b.wait_popup("realms-op")
        b.wait_visible("#realms-op-form")
        b.wait_val("#realms-op-address", "cockpit.lan")
        b.wait_val("#realms-op-admin", "admin")
        b.set_val("#realms-op-admin-password", "foo")
        b.click("#realms-op-apply")
        b.wait_text_not("#realms-op-error", "")
        b.click("#realms-op-cancel")
        b.wait_popdown("realms-op")

        # Try to join a non-existing domain
        b.click("#realms-join")
        b.wait_popup("realms-op")
        b.wait_visible("#realms-op-form")
        b.wait_val("#realms-op-address", "cockpit.lan")
        b.set_val("#realms-op-address", "NOPE")
        b.wait_js_cond("$('#realms-op-address-error').attr('title') != ''")
        b.click("#realms-op-cancel")
        b.wait_popdown("realms-op")

        # Cancel a join
        b.click("#realms-join")
        b.wait_popup("realms-op")
        b.wait_visible("#realms-op-form")
        b.wait_val("#realms-op-address", "cockpit.lan")
        b.wait_val("#realms-op-admin", "admin")
        b.set_val("#realms-op-admin-password", "foobarfoo")
        b.click("#realms-op-apply")
        b.wait_visible("#realms-op-spinner")
        b.click("#realms-op-cancel")
        b.wait_popdown("realms-op")

test_main()
