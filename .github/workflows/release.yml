name: release
on:
  push:
    tags:
      # this is a glob, not a regexp
      - '[0-9]*'
jobs:
  cockpituous:
    runs-on: ubuntu-latest
    environment: release
    container:
      image: ghcr.io/cockpit-project/release
    permissions:
      # create GitHub release
      contents: write
    steps:
      - name: Set up configuration and secrets
        run: |
          # override GitHub's bind mount from host, we don't want anything from there and it interferes with ssh
          export HOME=$(getent passwd $(id -u) | cut -f6 -d:)

          # This uses the shared cockpit-project organization secrets:
          # https://github.com/organizations/cockpit-project/settings/secrets
          echo '${{ secrets.SSH_KNOWN_HOSTS }}' > ~/.ssh/known_hosts
          echo '${{ secrets.FEDPKG_SSH_PUBLIC }}' > ~/.ssh/id_rsa.pub
          echo '${{ secrets.FEDPKG_SSH_PRIVATE }}' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo 'cockpit' > ~/.config/bodhi-user
          echo '${{ secrets.GITHUB_TOKEN }}' > ~/.config/github-token
          echo '${{ secrets.COCKPIT_FEDORA_PASSWORD }}' > ~/.fedora-password

      - name: Run cockpituous
        run: |
          # override GitHub's bind mount from host, we don't want anything from there and it interferes with ssh
          export HOME=$(getent passwd $(id -u) | cut -f6 -d:)
          cd /build
          release-runner -r https://github.com/$GITHUB_REPOSITORY -t $(basename $GITHUB_REF) tools/cockpituous-release

  release-node-cache:
    runs-on: ubuntu-latest
    environment: node-cache
    # done via deploy key, token needs no write permissions at all
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up git
        run: |
            git config user.name "GitHub Workflow"
            git config user.email "cockpituous@cockpit-project.org"

      - name: Tag node-cache
        run: |
          set -eux
          # this is a shared repo, prefix with project name
          TAG="${GITHUB_REPOSITORY#*/}-$(basename $GITHUB_REF)"

          tools/node-modules checkout
          cd node_modules
          git tag "$TAG"

          git remote add cache "ssh://git@github.com/${GITHUB_REPOSITORY%/*}/node-cache"
          eval $(ssh-agent)
          ssh-add - <<< '${{ secrets.DEPLOY_KEY }}'
          # make this idempotent: delete an existing tag
          git push cache :"$TAG" || true
          git push cache tag "$TAG"
          ssh-add -D
