#!/bin/sh

# Create a deterministic distribution tarball with timestamps
# based on the time of the latest git commit.

set -eu

tardir="$1"

# This will work for .git or for .tarball
#
# Note: we give the .tarball file the exact same timestamp as the git commit,
# so producing a tarball from a tarball should also create the exact same
# output.

stamp="$(git show --format=%ct --no-patch 2>&1 || stat -c %Y .tarball)"

test -n "${stamp}"

timestamp() {
    find "$@" -exec touch -d "@${stamp}" '{}' '+'
    stamp="$((stamp + 1))"
}

# all files get the same timestamp as the commit date
timestamp "${tardir}"

# aclocal.m4 comes next
timestamp "${tardir}/aclocal.m4"

# then the other automake generated files
timestamp \
    "${tardir}/config.h.in" \
    "${tardir}/configure" \
    "${tardir}/Makefile.in"

# package-lock.json needs to be newer than package.json
timestamp "${tardir}/package-lock.json"

# and dist/ needs to be newer than that
timestamp "${tardir}/dist"

# we generate these files during `make dist`
timestamp \
    "${tardir}/.tarball" \
    "${tardir}/tools/debian/copyright" \
    "${tardir}/tools/cockpit.spec"

# finally, the directories should be newer than everything else
timestamp "${tardir}" -type d

# and now we can produce the archive
# we use ustar because it excludes atime/ctime
exec tar --format=ustar --sort=name -chf - "${tardir}"
