#!/bin/bash

set -eu

TEST_REFERENCE_SUBDIR="${TEST_REFERENCE_SUBDIR:-test/reference}"
REPO=pixel-test-reference

GITHUB_BASE="${GITHUB_BASE:-cockpit-project/cockpit}"
GITHUB_REPOSITORY="${GITHUB_BASE%/*}/${REPO}"
CLONE_REMOTE="https://github.com/${GITHUB_REPOSITORY}"
PUSH_REMOTE="git@github.com:${GITHUB_REPOSITORY}"

message() {
    [ "${V-}" != 0 ] || printf "  %-8s %s\n" "$1" "$2"
}

cmd_init() {
    git submodule add -b empty "$CLONE_REMOTE" "$TEST_REFERENCE_SUBDIR"
}

cmd_pull() {
    git submodule update --init -- "$TEST_REFERENCE_SUBDIR" || (
        echo ""
        echo "Updating test/reference has failed, maybe because of"
        echo "local changes that have been accidentally made while"
        echo "it was out of date."
        echo ""
        echo "If you want to throw away these local changes, run"
        echo ""
        echo "    $ ./test/common/pixel-tests reset"
        echo ""
        exit 1
    )
}

cmd_status() {
    cmd_pull
    ( cd "$TEST_REFERENCE_SUBDIR"
      git rm --force --cached --quiet '*.png'
      git add *.png
      if git diff-index --name-status --cached --exit-code HEAD; then
          echo No changes
      fi
    )
}

cmd_push() {
    cmd_pull
    ( cd "$TEST_REFERENCE_SUBDIR"
      git rm --force --cached --quiet '*.png'
      git add *.png
      if ! git diff-index --name-status --cached --exit-code HEAD; then
          git fetch origin empty:empty
          git reset --soft empty
          git commit --quiet -m "$(date)"
      else
          echo No changes
      fi
      tag="sha-$(git rev-parse HEAD)"
      [ $(git tag -l "$tag") ] || git tag "$tag" HEAD
      git push "$PUSH_REMOTE" "$tag"
    )
    git add "$TEST_REFERENCE_SUBDIR"
    if [ -n "$(git status --porcelain "$TEST_REFERENCE_SUBDIR")" ]; then
        echo ""
        echo "The test/reference link has changed.  The next step is to commit and"
        echo "push this change, just like any other change to a file."
        echo ""
        echo "The change has already been added with 'git add', so you could now"
        echo "amend your current HEAD commit with it like this:"
        echo ""
        echo "    $ git commit --amend"
        echo ""
        echo "Then the HEAD commit can be pushed like normally.  There is nothing"
        echo "special about committing and pushing a change to test/reference."
    fi
}

cmd_reset() {
    rm -rf "$TEST_REFERENCE_SUBDIR"
    cmd_pull
}

main() {
    local cmd="${1-}"

    if [ -z "${cmd}" ]; then
        echo 'This command requires a subcommand: init pull status push reset'
        exit 1
    elif ! type -t "cmd_${cmd}" | grep -q function; then
        echo "Unknown subcommand ${cmd}"
        exit 1
    fi

    shift
    [ "${V-0}" = 0 ] || set -x
    "cmd_$cmd" "$@"
}

main "$@"
