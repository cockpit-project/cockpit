#!/usr/bin/python
# -*- coding: utf-8 -*-

# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

import subprocess
import time

from testlib import *

class TestReauthorize(MachineCase):
    def testBasic(self):
        m = self.machine
        b = self.browser

	self.login_and_go("/local/playground")

	b.click(".cockpit-internal-reauthorize .btn")
	b.wait_in_text(".cockpit-internal-reauthorize span", 'result:')

	self.assertEqual(b.text(".cockpit-internal-reauthorize span"), 'result: authorized')

	# Deauthorize
	b.switch_to_parent_frame()
	b.click(".cockpit-deauthorize-item a")
	b.wait_in_text(".cockpit-deauthorize-status", 'deauthorized')

	b.switch_to_frame("/local/playground")

	b.click(".cockpit-internal-reauthorize .btn")
	b.wait_in_text(".cockpit-internal-reauthorize span", 'result:')

	self.assertEqual(b.text(".cockpit-internal-reauthorize span"), 'result: not-authorized')

    def testSuper(self):
        m = self.machine
        b = self.browser

        self.login_and_go("/local/playground")

        b.click(".super-channel .btn")
        b.wait_in_text(".super-channel span", 'result: ')

        self.assertIn('result: uid=0', b.text(".super-channel span"))

        # Deauthorize
        b.switch_to_parent_frame()
        b.click(".cockpit-deauthorize-item a")
        b.wait_in_text(".cockpit-deauthorize-status", 'deauthorized')

        b.switch_to_frame("/local/playground")

        b.click(".super-channel .btn")
        b.wait_in_text(".super-channel span", 'result:')

        self.assertEqual(b.text(".super-channel span"), 'result: not-authorized')

test_main()
