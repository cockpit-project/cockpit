#!/bin/sh
# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

VIRSH=/bin/virsh
QEMU_BRIDGE_HELPER=/usr/libexec/qemu-bridge-helper

SELF=vm-prep
. ./testlib.sh

set -euf

usage()
{
	echo >&2 "usage: $SELF [-u] [--nat] [--check]"
}

prepare()
{
	if silent $VIRSH net-info cockpit; then
		$VIRSH net-destroy cockpit
		$VIRSH net-undefine cockpit
	fi

	xml=$(mktemp)
        forward=""
        bridge="cockpitisol0"
        if [ "$do_nat" == "yes" ]; then
            forward="<forward mode='nat'><nat><port start='1024' end='65535'/></nat></forward>"
            bridge="cockpit0"
        fi
cat > $xml << EOF
<network>
	<name>cockpit</name>
	<uuid>f3605fa4-0763-41ea-8143-49da3bf73262</uuid>
        $forward
	<bridge name='$bridge' stp='on' delay='0' />
	<mac address='52:54:00:b8:d2:b5'/>
	<domain name='cockpit.lan'/>
	<ip address='10.111.111.200' netmask='255.255.255.0'>
		<dhcp>
			<range start='10.111.111.1' end='10.111.111.99' />
                        <host mac='52:54:00:9e:00:F0' ip='10.111.111.100' name='f0.cockpit.lan'/>
                        <host mac='52:54:00:9e:00:F1' ip='10.111.111.101' name='f1.cockpit.lan'/>
                        <host mac='52:54:00:9e:00:F2' ip='10.111.111.102' name='f2.cockpit.lan'/>
                        <host mac='52:54:00:9e:00:F3' ip='10.111.111.103' name='f3.cockpit.lan'/>
                        <host mac='52:54:00:9e:00:F4' ip='10.111.111.104' name='f4.cockpit.lan'/>
		</dhcp>
	</ip>
</network>
EOF

	$VIRSH net-define $xml
	rm $xml

	$VIRSH net-autostart cockpit
	$VIRSH net-start cockpit

	if [ ! -u $QEMU_BRIDGE_HELPER ]; then
		chmod -v u+s $QEMU_BRIDGE_HELPER
	fi

	qemu_config_dir=
	for d in /etc/qemu-kvm/ /etc/qemu; do
	    if test -f ${d}/bridge.conf; then
		qemu_config_dir=${d}
	    fi
	done
	if test -z "$qemu_config_dir"; then
	    warning "Could not find qemu config dir"
	    exit 1
	fi

	rule="allow $bridge"
	if ! silent grep -F $bridge ${qemu_config_dir}/bridge.conf; then
		echo "$rule" >> ${qemu_config_dir}/bridge.conf
	fi
}

unprepare()
{
	if ! silent virsh net-info cockpit; then
		warning "the cockpit network has not been configured"
		exit 1
	fi

	$VIRSH net-destroy cockpit
	$VIRSH net-undefine cockpit
}

IFCONFIG=/sbin/ifconfig

check()
{
    withorwithout="without"
    bridge="cockpitisol0"
    if [ "$do_nat" == "yes" ]; then
        withorwithout="with"
        bridge="cockpit0"
    fi

    if ! silent $IFCONFIG $bridge; then
        echo "Cockpit test network not set up $withorwithout NAT."
        exit 1
    fi
}

operation=prepare
do_nat=no
args=$(getopt -o "uhnc" -l "help" -l "nat" -l "check" -- "$@")
eval set -- "$args"
while [ $# -gt 0 ]; do
	case $1 in
	-h|--help)
		usage
		exit 0
		;;
        -n|--nat)
                do_nat=yes
                ;;
	-u)
		operation=unprepare
		;;
        -c|--check)
                operation=check
                ;;
	--)
		shift
		break
		;;
	esac
	shift
done

if [ $# -ne 0 ]; then
	usage
	exit 2
fi

uid=$(id -u)
if [ "$operation" != "check" -a "$uid" != "0" ]; then
	warning "this script must be run as root"
	exit 1
fi

$operation
