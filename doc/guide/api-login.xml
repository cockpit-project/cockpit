<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<refentry id="cockpit-login">
  <refnamediv>
    <refname>cockpit.js: User Login</refname>
    <refpurpose>User information and login state</refpurpose>
  </refnamediv>

  <refsection id="cockpit-logout">
    <title>cockpit.logout()</title>
<programlisting>
cockpit.logout([reload])
</programlisting>
    <para>Logout of Cockpit. Unless <code>reload</code> is <code>false</code> this will also
      cause the page to be reloaded, so that the user can see the logged out state.</para>
  </refsection>

  <refsection id="cockpit-user">
    <title>cockpit.user</title>
<programlisting>
cockpit.user["user"]
cockpit.user["name"]
cockpit.user["groups"]
cockpit.user["shell"]
cockpit.user["home"]
cockpit.user["id"]
</programlisting>
    <para>This object contains information about the user that's currently logged into cockpit.
      The following fields are defined:</para>

    <variablelist>
      <varlistentry>
        <term><code>"groups"</code></term>
        <listitem><para>This is an array of group names to which the user belongs.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><code>"home"</code></term>
        <listitem><para>This is user's home directory.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><code>"id"</code></term>
        <listitem><para>This is unix user id.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><code>"name"</code></term>
        <listitem><para>This is a readable name for the user.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><code>"shell"</code></term>
        <listitem><para>This is unix user shell.</para></listitem>
      </varlistentry>
      <varlistentry>
        <term><code>"user"</code></term>
        <listitem><para>This is the unix user like <code>"root"</code>.</para></listitem>
      </varlistentry>
    </variablelist>

    <para>The fields will be <code>undefined</code> until a connection is made to the
      cockpit server.</para>
  </refsection>

  <refsection id="cockpit-info-changed">
    <title>cockpit.user.onchanged</title>
<programlisting>
$(cockpit.user).on("changed", function() { ... })
</programlisting>
    <para>This event is fired when the user info changes or first becomes available.</para>
  </refsection>

</refentry>
