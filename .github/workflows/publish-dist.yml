name: publish-dist
on:
  workflow_run:
    workflows: build-dist
    types: [completed]

jobs:
  run:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Download build-dist artifacts
        # 2.14.0; if you update this, audit the diff and ensure that it does not leak/abuse secrets
        uses: dawidd6/action-download-artifact@b9571484721e8187f1fd08147b497129f8972c74
        with:
          name: dist
          workflow: build-dist
          run_id: ${{ github.event.workflow_run.id }}
          path: dist-unpack

      - name: Set up configuration and secrets
        run: |
          printf '[user]\n\tname = Cockpit Project\n\temail=cockpituous@gmail.com\n' > ~/.gitconfig
          # we push to -dist repo via https://github.com, that needs our cockpituous token
          git config --global credential.helper store
          echo 'https://token:${{ secrets.COCKPITUOUS_TOKEN }}@github.com' >> ~/.git-credentials

      - name: Commit to dist repo
        run: |
          set -ex
          mkdir dist-repo
          cd dist-repo
          TARS=(../dist-unpack/cockpit-*.tar.xz)
          if [ "${#TARS[@]}" -ne 1 ]; then
              echo "Expected exactly one tarball" >&2
              exit 1
          fi
          tar --strip-components=1 -xf "${TARS[0]}"

          # prevent any sneaky/buggy stuff from build-dist
          danger="$(find -maxdepth 1 -name '.git*')"
          if [ -n "$danger" ]; then
              printf "Unexpected files in dist artifact:\n%s\n" "$danger" >&2
              exit 1
          fi

          git init
          git add dist/ node_modules/ package-lock.json tools/debian/copyright
          git commit -m "Build for ${{ github.event.workflow_run.head_sha }}"
          tag='sha-${{ github.event.workflow_run.head_sha }}'
          git tag "$tag"

          git push https://github.com/${{ github.repository }}-dist.git "$tag"
