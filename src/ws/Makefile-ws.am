COCKPIT_BUILD_INFO = "Built on $(shell date)"

noinst_LIBRARIES += libcockpit-ws.a

libcockpit_ws_a_SOURCES = \
	src/ws/cockpitws.h				\
	src/ws/cockpitwstypes.h					\
	src/ws/cockpitwebserver.h		src/ws/cockpitwebserver.c		\
	src/ws/cockpitwebsocket.h 	src/ws/cockpitwebsocket.c		\
	src/ws/cockpithandlers.h	src/ws/cockpithandlers.c	\
	src/ws/cockpitauth.h		src/ws/cockpitauth.c		\
	src/ws/cockpittransport.h	src/ws/cockpittransport.c	\
	cockpitwsenumtypes.h	cockpitwsenumtypes.c	\
	src/ws/cockpittransport.h src/ws/cockpittransport.c \
	src/ws/cockpitfdtransport.h src/ws/cockpitfdtransport.c \
	$(NULL)

libcockpit_ws_a_CPPFLAGS = \
        $(cockpit_cppflags_common) \
	$(cockpit_cppflags_glib_version)			\
	-I$(top_srcdir)/src/libgsystem \
	-I$(top_srcdir)/src/ws \
	-DCOCKPIT_BUILD_INFO=\"$(COCKPIT_BUILD_INFO)\"	\
	-DG_LOG_DOMAIN=\"libcockpit-ws\" \
	$(NULL)

libcockpit_ws_a_CFLAGS = \
	$(COCKPIT_WS_CFLAGS) \
	$(WARN_CFLAGS) \
	$(NULL)

libcockpit_ws_LIBS = \
	libcockpit-ws.a \
	libcockpit.a \
	libwebsocket.a \
	$(COCKPIT_WS_LIBS) \
	$(NULL)

libcockpit_ws_enumheaders = 				\
	src/ws/cockpitwstypes.h 					\
	src/ws/cockpitwebserver.h 				\
	$(NULL)

cockpitwsenumtypes.h:  src/ws/cockpitwsenumtypes.h.template $(libcockpit_ws_enumheaders)
	$(AM_V_GEN) ( \
	  glib-mkenums  --template $< \
	  $(addprefix $(srcdir)/,$(libcockpit_ws_enumheaders)) > $@.tmp \
	  && (cmp -s $@.tmp $@ || mv $@.tmp $@))

cockpitwsenumtypes.c: src/ws/cockpitwsenumtypes.c.template $(libcockpit_ws_enumheaders)
	$(AM_V_GEN) ( \
	  glib-mkenums --template $< \
	  $(addprefix $(srcdir)/,$(libcockpit_ws_enumheaders)) ) > $@.tmp && \
	  mv $@.tmp $@

BUILT_SOURCES += cockpitwsenumtypes.c cockpitwsenumtypes.h
EXTRA_DIST += \
	src/ws/cockpitwsenumtypes.h.template \
	src/ws/cockpitwsenumtypes.c.template \
	src/ws/com.redhat.Cockpit.DBusTests.xml \
	src/ws/mock_rsa_key \
	src/ws/mock_dsa_key

CLEANFILES += \
	cockpitwsenumtypes.h \
	cockpitwsenumtypes.c \
	$(NULL)

# ----------------------------------------------------------------------------------------------------

libexec_PROGRAMS += cockpit-ws cockpit-session cockpit-agent

cockpit_ws_SOURCES =					\
	src/ws/main.c					\
	$(NULL)

cockpit_ws_CFLAGS = 					\
	$(cockpit_cppflags_common)				\
	$(cockpit_cppflags_glib_version)			\
	-DG_LOG_DOMAIN=\"cockpit-ws\"			\
	-I$(top_srcdir)/src/libgsystem			\
	-I$(top_srcdir)/src/ws				\
	$(COCKPIT_WS_CFLAGS)				\
	$(NULL)

cockpit_ws_LDADD = 					\
	$(libcockpit_ws_LIBS) \
	$(COCKPIT_WS_LIBS)					\
	$(NULL)

cockpit_session_SOURCES =					\
	src/ws/session.c				\
	$(NULL)

cockpit_session_CFLAGS = 					\
	$(cockpit_cppflags_common)				\
	$(cockpit_cppflags_glib_version)			\
	$(NULL)

cockpit_session_LDADD = 					\
	$(COCKPIT_SESSION_LIBS)				\
	$(NULL)

cockpit_agent_SOURCES =					\
	src/ws/agent.c					\
	src/ws/dbus-server.h				\
	src/ws/dbus-server.c				\
	src/ws/cockpittransport.c			\
	src/ws/cockpitfdtransport.c			\
	$(NULL)

cockpit_agent_CFLAGS = 					\
	$(cockpit_cppflags_common)				\
	$(cockpit_cppflags_glib_version)			\
	-DG_LOG_DOMAIN=\"cockpit-agent\"			\
	-I$(top_srcdir)/src/libgsystem			\
	-I$(top_srcdir)/src/ws				\
	$(COCKPIT_AGENT_CFLAGS)				\
	$(NULL)

cockpit_agent_LDADD = 					\
	$(COCKPIT_AGENT_LIBS)				\
	$(NULL)

# ----------------------------------------------------------------------------------------------------

$(test_server_built_sources) : Makefile.am $(top_srcdir)/src/ws/com.redhat.Cockpit.DBusTests.xml
	$(AM_V_GEN) gdbus-codegen \
		--interface-prefix com.redhat.Cockpit.DBusTests                 	\
		--c-namespace Test							\
		--c-generate-object-manager						\
		--generate-c-code test-server-generated                             	\
		$(top_srcdir)/src/ws/com.redhat.Cockpit.DBusTests.xml		\
		$(NULL)

test_server_built_sources =								\
	test-server-generated.h			test-server-generated.c			\
	$(NULL)

BUILT_SOURCES += $(test_server_built_sources)

noinst_PROGRAMS += test-server test-agent

testassets_programs += test-server test-agent
testassets_data += dbus-test.html \
                   dbus.js  \
                   channel.js \
                   $(QUNIT_DEPS) \
                   $(NULL)

test_server_SOURCES = 					\
	src/ws/test-server.c				\
	src/ws/mock-service.c src/ws/mock-service.h \
	$(test_server_built_sources)			\
	$(NULL)

# We can't compile the $(test_server_SOURCES) with
# $(cockpit_cppflags_glib_version) since the sources contain generated
# code which would break with our version constraints.  Instead, we
# suppress warnings about deprecated functions.
#
test_server_suppress_warning_cflags = -Wno-deprecated-declarations

test_server_CFLAGS = 					\
	$(cockpit_cppflags_common)				\
	-I$(top_srcdir)/src/ws \
	-I$(top_srcdir)/src/libgsystem \
	-DG_LOG_DOMAIN=\"test_server\"			\
	$(test_server_suppress_warning_cflags)		\
	$(GIO_CFLAGS)					\
	$(NULL)

test_server_LDADD = 					\
	$(libcockpit_ws_LIBS) \
	$(GIO_LIBS)					\
	-lpam 						\
	$(NULL)

test_dbusserver_SOURCES =  \
	src/ws/dbus-server.c \
	src/ws/test-dbusserver.c \
	src/ws/mock-service.c \
	$(test_server_built_sources) \
	$(NULL)

test_dbusserver_CFLAGS = \
	$(test_server_CFLAGS) \
	$(COCKPIT_AGENT_CFLAGS) \
	$(NULL)

test_dbusserver_LDADD =  \
	$(libcockpit_ws_LIBS) \
	$(COCKPIT_WS_LIBS) \
	$(NULL)

test_agent_SOURCES = 					\
	src/ws/test-agent.c				\
	src/ws/dbus-server.h 				\
	src/ws/dbus-server.c 				\
	src/ws/cockpittransport.c \
	src/ws/cockpitfdtransport.c \
	$(NULL)

test_agent_CFLAGS = 					\
	$(cockpit_cppflags_common)				\
	$(cockpit_cppflags_glib_version)			\
	-DG_LOG_DOMAIN=\"test_agent\"			\
	-I$(top_srcdir)/src/libgsystem			\
	-I$(top_srcdir)/src/ws				\
	$(COCKPIT_AGENT_CFLAGS)				\
	$(NULL)

test_agent_LDADD = 					\
	$(COCKPIT_AGENT_LIBS)				\
	$(NULL)

CHECK_PROGS = \
	test-auth \
	test-transport \
	test-webserver \
	test-webservice \
	test-handlers \
	test-dbusserver \
	test-server \
	$(NULL)

test_auth_CFLAGS = $(cockpit_ws_CFLAGS)

test_auth_SOURCES = \
	src/ws/test-auth.c \
	src/ws/mock-auth.c \
	src/ws/mock-auth.h \
	$(NULL)

test_auth_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_transport_CFLAGS = $(cockpit_ws_CFLAGS)

test_transport_SOURCES = \
	src/ws/test-transport.c \
	$(NULL)

test_transport_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_handlers_CFLAGS = $(cockpit_ws_CFLAGS)

test_handlers_SOURCES = \
	src/ws/test-handlers.c \
	src/ws/mock-auth.c src/ws/mock-auth.h \
	src/ws/mock-io-stream.c src/ws/mock-io-stream.h \
	$(NULL)

test_handlers_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_webservice_SOURCES = \
	src/ws/test-webservice.c \
	src/ws/mock-auth.c \
	src/ws/mock-auth.h \
	$(NULL)

test_webservice_CFLAGS = $(cockpit_ws_CFLAGS)

test_webservice_LDADD = \
	libwebsocket.a \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_webserver_SOURCES = \
	src/ws/test-webserver.c \
	$(NULL)

test_webserver_CFLAGS = $(cockpit_ws_CFLAGS)

test_webserver_LDADD = \
	libwebsocket.a \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

mock_sshd_SOURCES = src/ws/mock-sshd.c
mock_sshd_CFLAGS =  $(COCKPIT_WS_CFLAGS)
mock_sshd_LDADD = $(COCKPIT_WS_LIBS) -lutil

mock_echo_SOURCES = src/ws/mock-echo.c
mock_echo_CFLAGS = $(COCKPIT_WS_CFLAGS)
mock_echo_LDADD = $(COCKPIT_WS_LIBS)

noinst_PROGRAMS += \
	$(CHECK_PROGS) \
	mock-sshd \
	mock-echo \
	$(NULL)

TESTS += $(CHECK_PROGS)

install-exec-hook::
	mkdir -p $(DESTDIR)$(sysconfdir)/cockpit/ws-certs.d
	-chmod 700 $(DESTDIR)$(sysconfdir)/cockpit/ws-certs.d
	mkdir -p $(DESTDIR)$(localstatedir)/lib/cockpit
	-chmod 700 $(DESTDIR)$(localstatedir)/lib/cockpit
