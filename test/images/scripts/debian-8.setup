#! /bin/bash

set -ex

# Enable a console on ttyS0 so that we can log-in via vm-run.
#
echo 'GRUB_CMDLINE_LINUX="console=ttyS0,115200"' >>/etc/default/grub
update-grub

# We install all dependencies of the cockpit packages since we want
# them to not spontaneously change from one test run to the next when
# the distribution repository is updated.
# docker.io \
#
COCKPIT_DEPS="\
cryptsetup \
libjson-glib-1.0-0 \
libpcp3 \
libpolkit-agent-1-0 \
libpolkit-gobject-1-0 \
libpwquality-tools \
libssh-4 \
libvirt-daemon-system \
mdadm \
network-manager \
pcp \
policykit-1 \
realmd \
selinux-basics \
thin-provisioning-tools \
xdg-utils \
udisks2 \
"

# HACK - https://github.com/cockpit-project/cockpit/issues/3298
# We have a  explicit list of build dependencies here until we figure
# out how to let pbuilder install them.
#
COCKPIT_BUILD_DEPS="\
debhelper \
dh-autoreconf \
autoconf \
automake \
intltool \
libssh-dev \
libssl-dev \
zlib1g-dev \
libkrb5-dev \
libxslt1-dev \
libkeyutils-dev \
libglib2.0-dev \
libsystemd-dev \
libpolkit-agent-1-dev \
libpcp3-dev \
libjson-glib-dev \
libpam0g-dev \
libpcp-import1-dev \
libpcp-pmda3-dev \
systemd \
xsltproc \
xmlto \
docbook-xsl \
glib-networking \
nodejs-legacy \
npm \
openssh-client \
"

TEST_PACKAGES="\
curl \
gdb \
virtinst \
"

useradd -m -U -c Administrator -G sudo -s /bin/bash admin
echo admin:foobar | chpasswd

export DEBIAN_FRONTEND=noninteractive
apt-get -y install $TEST_PACKAGES $COCKPIT_DEPS

# Install docker separately from jessie-backports
echo "deb http://ftp.uk.debian.org/debian jessie-backports main" >/etc/apt/sources.list.d/backports.list
apt-get -y update
apt-get -y install docker.io
rm /etc/apt/sources.list.d/backports.list
apt-get -y update

# Prepare for building
#
apt-get -y install dpkg-dev pbuilder
echo "DISTRIBUTION=jessie" > ~/.pbuilderrc
pbuilder --create
echo "apt-get -y install fakeroot $COCKPIT_BUILD_DEPS" >debian-8.install-build-deps
pbuilder --execute --save-after-exec debian-8.install-build-deps
# Disable build-dep installation for the real builds
echo PBUILDERSATISFYDEPENDSCMD=true >>~/.pbuilderrc

# Debian does not automatically start the default libvirt network
virsh net-autostart default

# HACK: docker falls over regularly, print its log if it does
systemctl start docker || journalctl -u docker

# docker images that we need for integration testing
/var/lib/testvm/docker-images.setup

# in case there are unnecessary packages
apt-get -y autoremove || true

# reduce image size
apt-get clean
/var/lib/testvm/zero-disk.setup

# Final tweaks

# Enable persistent journal
mkdir /var/log/journal

# Allow root login with password
sed -i 's/^PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config

# Disable old SSH init script.  Something is calling "/etc/init.d/ssh
# reload" during boot and that results in the ssh port being
# unreachable temporarily.
#
chmod a-x /etc/init.d/ssh
