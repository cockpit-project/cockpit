#!/usr/bin/phantomjs

/*
 * Copyright (C) 2013 Red Hat, Inc.
 *
 * Cockpit is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * Cockpit is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * This is a phantom driver for QUnit which outputs TAP
 */

if (phantom.args.length != 1) {
    console.log('usage: tap-phantom url');
    phantom.exit(2);
}

var sys = require('system');
var fs = require('fs');

function calc_srcdir()
{
    var dir = sys.args[0];
    var pos = dir.lastIndexOf(fs.separator);
    if(pos == -1)
        return ".";
    else
        return dir.substring(0, pos);
}

var url = sys.args[1];
var page = require('webpage').create();

page.viewportSize = { width: 800, height: 480 };

page.onConsoleMessage = function(msg, lineNum, sourceId) {
    /* All done with testing */
    if (msg === "qunit-tap-done")
        setTimeout(function() { phantom.exit(0); }, 0);

    /* TAP lines go to stdout */
    else if (msg.match(/^ok [0-9]+/i) ||
             msg.match(/^not ok [0-9]+/i) ||
             msg.match(/^Bail out!/i) ||
             msg.match(/^[0-9]+\.\.[0-9]+/) ||
             msg.match(/^# /))
        sys.stdout.writeLine(msg);

    /* Everything else goes to stderr */
    else
        sys.stderr.writeLine(msg);
};

page.onResourceError = function(ex) {
    console.error('Unable to load resource: ' + ex.url + ': ' + ex.errorString);
    phantom.exit(1);
};

page.open(url, function(status) {
    if(status !== "success") {
        console.log("Unable to load page:", url);
        phantom.exit(1);
    }

    page.injectJs(calc_srcdir() + "/qunit-tap.js")

    page.evaluate(function() {
        /* Automatically start up qunitTap */
        qunitTap(QUnit, function() {
            console.log.apply(console, arguments);
        });
        QUnit.done(function() {
            console.log("qunit-tap-done");
        });
    });
});
