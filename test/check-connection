#!/usr/bin/python
# -*- coding: utf-8 -*-

# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

from testlib import *

class TestConnection(MachineCase):
    def testBasic(self):
        b = self.browser
        m = self.machine

        self.start_cockpit()

        # take cockpit-ws down on the login page
        b.open("server")
        b.wait_visible("#login")
        b.set_val("#login-user-input", "admin")
        b.set_val("#login-password-input", "foobar")
        m.execute("systemctl stop cockpit-testing.socket")
        b.click('#login-button')
        b.wait_text_not('#login-fatal-message', "")
        m.execute("systemctl start cockpit-testing.socket")
        b.click('#login-button')
        b.wait_page("server")

        # take cockpit-ws down on the server page
        m.execute("systemctl stop cockpit-testing.socket")
        b.wait_popup("disconnected-dialog")
        m.execute("systemctl start cockpit-testing.socket")
        b.click('#disconnected-reconnect')
        b.wait_in_text('#disconnected-error', "Your session has expired.")
        b.click('#disconnected-logout')
        b.expect_reload()
        b.wait_visible("#login")
        b.set_val("#login-user-input", "admin")
        b.set_val("#login-password-input", "foobar")

        # severe the connection on the login page
        m.execute("iptables -I INPUT 1 -p tcp --dport 1001 -j REJECT")
        b.click('#login-button')
        with b.wait_timeout(20):
            b.wait_text_not('#login-fatal-message', "")
        m.execute("iptables -D INPUT 1")
        b.click('#login-button')
        b.wait_page("server")

        # severe the connection on the server page
	m.execute("iptables -I INPUT 1 -p tcp --dport 1001 -j REJECT")
        with b.wait_timeout(60):
            b.wait_popup("disconnected-dialog")
        b.wait_in_text('#disconnected-error', "Connection has timed out.")
        m.execute("iptables -D INPUT 1")
        b.click('#disconnected-reconnect')
        b.wait_popdown("disconnected-dialog")

test_main()
