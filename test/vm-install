#!/usr/bin/env python
# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

import argparse
import os
import sys

import testvm

parser = argparse.ArgumentParser(description='Install Cockpit on a virtual machine')
parser.add_argument('-v', '--verbose', action='store_true', help='Display verbose progress details')
parser.add_argument('-f', '--flavor', action='store', help='The image to modify')
parser.add_argument('rpms', metavar='RPM', nargs='*', help='RPMS to install')
args = parser.parse_args()

INSTALL_SCRIPT = """#!/bin/sh
export TEST_PACKAGES
export TEST_VERBOSE
%s"""

def install(machine, rpms):
    """Install rpms in the pre-built test image"""
    for rpm in rpms:
        if not os.path.exists(rpm):
            raise testvm.Failure("file does not exist: %s" % rpm)

    if not rpms:
        raise testvm.Failure("Please specify packages to install")

    # see if there is an os-specific install script to use, otherwise use generic
    install_packages_script = os.path.join(machine.test_dir, "guest/%s-%s-install_packages" % (machine.os, machine.arch))
    if not os.path.exists(install_packages_script):
        install_packages_script = os.path.join(machine.test_dir, "guest/default-install_packages")

    target_install_script_path = "~/install_packages.py"

    machine.start(maintain=True)
    try:
        machine.wait_boot()
        machine.upload(rpms, "/var/tmp")
        uploaded = []
        for rpm in rpms:
            base = os.path.basename(rpm)
            dest = os.path.join("/var/tmp", base)
            uploaded.append(dest)
        env = {
            "TEST_OS": machine.os,
            "TEST_ARCH": machine.arch,
            "TEST_FLAVOR": machine.flavor,
            "TEST_PACKAGES": " ".join(uploaded),
            "TEST_VERBOSE": machine.verbose
        }
        machine.upload([install_packages_script], target_install_script_path)
        script_to_run = INSTALL_SCRIPT % (target_install_script_path)
        machine.execute(script=script_to_run, environment=env)
    finally:
        machine.stop()

try:
    machine = testvm.VirtMachine(verbose=args.verbose, flavor=args.flavor, label="install")
    install(machine, args.rpms)
except testvm.Failure, ex:
    print >> sys.stderr, "vm-install:", ex
    sys.exit(1)
