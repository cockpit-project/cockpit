[build-system]
requires = []
backend-path = ['src']
build-backend = 'build_backend'

[tool.mypy]
mypy_path = 'src/cockpit'
exclude = '_vendor'
[[tool.mypy.overrides]]
module = ["cockpit._vendor.*"]
follow_imports = 'silent'

[tool.pylint]
max-line-length = 118
disable = [
  "C0114",  # Missing module docstring
  "C0115",  # Missing class docstring
  "R0902",  # Too many instance attributes
  "R0903",  # Too few public methods
  "R0913",  # Too many arguments
  "R1705",  # Unnecessary "else" after "return"
  "W1113",  # Keyword argument before variable positional arguments  (PEP-570 is Python 3.8)
]

[tool.ruff]
exclude = [
    ".git/",
    "modules/",
    "node_modules/",
    "pkg/",
    "test/common/",
    "test/verify/",
    "tools/",
]
ignore = [
    "E731",  # Do not assign a `lambda` expression, use a `def`
]
line-length = 118

[tool.pytest.ini_options]
addopts = ['--strict-markers']  # cf. https://github.com/cockpit-project/cockpit/pull/18584#issuecomment-1490243994
pythonpath = ["src"]
testpaths = ["test/pytest"]
log_cli = true
required_plugins = ["pytest-asyncio"]

[tool.vulture]
paths = [
   "src",
   "test/pytest",
   "tools/vulture_whitelist",
]
ignore_names = [
   "do_*",
   "test[A-Z0-9]*",
]
ignore_decorators = [
   "@*.register_function",
   "@*.getter",
   "@bus.Interface.Method"
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
concurrency = ["multiprocessing"]
source_pkgs = ["cockpit"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",  # default
  "raise NotImplementedError",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = site

[testenv]
deps=
  pytest-asyncio
  pytest-cov
  pytest-timeout
commands=
  python3 -m pytest -opythonpath= --cov {posargs}

[testenv:site]
sitepackages = True
deps=
"""
