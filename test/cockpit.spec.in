# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

Name:		cockpit
Version:	@VERSION@
Release:	1%{?dist}
Summary:	Cockpit

License:	LGPLv2+
URL:		http://www.cockpit-project.org/
Source0:	@TARBALLS_ARE_STUPID@

BuildRequires: pkgconfig(gio-unix-2.0)
BuildRequires: pkgconfig(gudev-1.0)
BuildRequires: pkgconfig(json-glib-1.0)
BuildRequires: pkgconfig(udisks2) >= 2.1.0
BuildRequires: pkgconfig(libsystemd-daemon)
BuildRequires: pkgconfig(polkit-agent-1) >= 0.105
BuildRequires: pkgconfig(accountsservice) >= 0.6.30
BuildRequires: pam-devel
BuildRequires: storaged >= 0.3.1

BuildRequires: autoconf automake
BuildRequires: intltool
BuildRequires: jsl
BuildRequires: libssh-devel >= 0.6.0
BuildRequires: openssl-devel
BuildRequires: zlib-devel
BuildRequires: krb5-devel
BuildRequires: libgsystem-devel
BuildRequires: libxslt-devel
BuildRequires: docbook-style-xsl
BuildRequires: keyutils-libs-devel
BuildRequires: dbus-devel
BuildRequires: glib-networking
BuildRequires: systemd

BuildRequires: perl-JavaScript-Minifier-XS
BuildRequires: perl-Locale-PO
BuildRequires: perl-JSON

# For selinux
BuildRequires: selinux-policy-devel
BuildRequires: checkpolicy
BuildRequires: /usr/share/selinux/devel/policyhelp
BuildRequires: sed

# For documentation
BuildRequires: /usr/bin/xmlto

Requires: glib-networking
Requires: realmd
Requires: udisks2 >= 2.1.0
Requires: mdadm
Requires: lvm2
Requires: storaged >= 0.3.1
Requires: selinux-policy
Requires(post): systemd
Requires(preun): systemd
Requires(postun): systemd

%description
Cockpit.

%pre
getent group cockpit-ws >/dev/null || groupadd -r cockpit-ws
getent passwd cockpit-ws >/dev/null || useradd -r -g cockpit-ws -d / -s /sbin/nologin -c "User for cockpit-ws" cockpit-ws

%preun
%systemd_preun cockpit.socket

%post
%systemd_post cockpit.socket
# Only for testing: in a distro we would ask sshd to ship the relevant lines
cat %{_datadir}/%{name}/sshd-reauthorize.pam >> %{_sysconfdir}/pam.d/sshd
# firewalld only partially picks up changes to its services files without this
test -f %{_bindir}/firewall-cmd && firewall-cmd --reload --quiet || true

%postun
%systemd_postun_with_restart cockpit.socket

%prep
%setup -q
%if 0%{?fedora} == 20
	sed -i s/unconfined_service_t/unconfined_t/g src/ws/test-server.service.in
%endif

%build
env NOCONFIGURE=1 ./autogen.sh
%configure --disable-static --disable-silent-rules --with-cockpit-user=cockpit-ws
make %{?_smp_mflags} %{?extra_flags} all selinux

%check
make check

%install
make install install-test-assets DESTDIR=%{buildroot}
rm -f %{buildroot}/%{_libdir}/cockpit/*.so
mkdir -p %{buildroot}/etc/pam.d/
cp test/cockpit.pam %{buildroot}/etc/pam.d/cockpit
cp src/bridge/sshd-reauthorize.pam %{buildroot}/%{_datadir}/%{name}
mkdir -p %{buildroot}/%{_datadir}/polkit-1/rules.d
cp src/bridge/polkit-workarounds.rules %{buildroot}/%{_datadir}/polkit-1/rules.d
install -d %{buildroot}%{_datadir}/selinux/targeted
install -p -m 644 cockpit.pp %{buildroot}%{_datadir}/selinux/targeted/

%files
%{_sysconfdir}/%{name}
%{_sysconfdir}/pam.d/cockpit
/usr/lib/systemd/system/cockpit.socket
/usr/lib/systemd/system/cockpit.service
/usr/lib/firewalld/services/cockpit.xml
%{_datadir}/dbus-1/services/com.redhat.Cockpit.service
%{_datadir}/appdata
%{_datadir}/applications
%{_datadir}/pixmaps
%{_sbindir}/remotectl
%{_libexecdir}/cockpitd
%{_libexecdir}/cockpit-ws
%{_bindir}/cockpit-bridge
# HACK: We need to do attr because stripping debuginfo removes setuid
# https://bugzilla.redhat.com/show_bug.cgi?id=117858
%attr(4755, -, -) %{_libexecdir}/cockpit-polkit
%attr(4750, root, cockpit-ws) %{_libexecdir}/cockpit-session
%{_libdir}/security/pam_reauthorize.so
%{_datadir}/%{name}
%{_mandir}/*
%attr(775, -, wheel) %{_sharedstatedir}/%{name}

%package doc
Summary: Cockpit deployment and developer guide

%description doc
The Cockpit Deployment and Developer Guide shows sysadmins how to
deploy Cockpit on their machines as well as helps developers who want to
embed or extend Cockpit.

%files doc
%{_docdir}/cockpit

%package test-assets
Summary: Additional stuff for testing Cockpit
Requires: openssh-clients

%description test-assets
This package contains programs and other files for testing Cockpit, and
pulls in some necessary packages via dependencies.

%files test-assets
%{_datadir}/cockpit-test-assets
%{_datadir}/polkit-1/rules.d
/usr/lib/systemd/system/cockpit-testing.service
/usr/lib/systemd/system/cockpit-testing.socket
/usr/lib/systemd/system/test-server.service
/usr/lib/systemd/system/test-server.socket

%package selinux-policy
Summary: SELinux policy for Cockpit testing
Requires: %{name} = %{version}-%{release}
Requires: %{name}-test-assets = %{version}-%{release}
Requires: selinux-policy
Requires: selinux-policy-targeted
Requires(post): /usr/sbin/semodule, /sbin/restorecon, /sbin/fixfiles
Requires(postun): /usr/sbin/semodule, /sbin/restorecon, /sbin/fixfiles
BuildArch: noarch

%description selinux-policy
SELinux policy for Cockpit testing.

%files selinux-policy
%defattr(-,root,root,0755)
%{_datadir}/selinux/targeted/cockpit.pp

%post selinux-policy
/usr/sbin/semodule -s targeted -i %{_datadir}/selinux/targeted/cockpit.pp &> /dev/null || :
/sbin/fixfiles -R cockpit restore || :
/sbin/fixfiles -R cockpit-test-assets restore || :
/sbin/restorecon -R %{_sharedstatedir}/%{name} || :

%postun selinux-policy
if [ $1 -eq 0 ] ; then
  /usr/sbin/semodule -s targeted -r cockpit &> /dev/null || :
  /sbin/fixfiles -R cockpit-selinux-policy restore || :
  [ -d %{_sharedstatedir}/%{name} ]  && \
    /sbin/restorecon -R %{_sharedstatedir}/%{name} &> /dev/null || :
fi
