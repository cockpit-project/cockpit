#!/bin/sh
set -eu

srcdir=$(realpath -m "$0"/..)
top_srcdir=$(dirname $(dirname $srcdir))
image=cockpit/unit-tests:latest
flags=''
cmd=''

while test $# -gt 0; do
  case "$1" in
    --docker) docker="docker";;
    --podman) docker="podman";;
    CC=*) ccarg="--env=$1";;
    shell) flags=-it; cmd=/bin/bash;;
    :*) image=cockpit/unit-tests"${1:-}";;
    *) echo "Unknown option '$1'"; exit 1;;
  esac
  shift
done

if test -z "${docker:=$(which podman || which docker || true)}"; then
  echo 'Neither podman nor docker are installed'
  exit 1
fi

# bind-mounted into the container, needs to be able to write
mkdir -p -m 777 node_modules_cache

if [ -d "${SEMAPHORE_CACHE_DIR:-}" ]; then
    $srcdir/semaphore-cache docker-load "$image"
    trap "$srcdir/semaphore-cache docker-save '$image'" EXIT
    $srcdir/semaphore-cache dir-load node_modules_cache
fi

set -x
${docker} run --shm-size=512M --volume "${top_srcdir}":/source:ro \
       --volume `pwd`/node_modules_cache:/source/node_modules:rw \
       ${ccarg:+"$ccarg"} $flags -- "$image" $cmd

# cache node_modules on successful master builds
if [ -d "${SEMAPHORE_CACHE_DIR:-}" -a -z "${PULL_REQUEST_NUMBER_XXXDISABLED:-}" ]; then
    # HACK: the file:eslint-plugin-cockpit symlink must be created inside the
    # container, otherwise npm install fails on EACCESS on the root-owned link
    find node_modules_cache -type l -delete
    $srcdir/semaphore-cache dir-save node_modules_cache
fi

rm -rf node_modules_cache
