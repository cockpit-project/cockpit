#!/usr/bin/env python

UPLOAD = "fedorapeople.org:/project/cockpit/images/"

import argparse
import os
import subprocess
import sys

BASE = os.path.dirname(__file__)
IMAGES = os.path.join(BASE, "images")
DATA = os.path.join(os.environ.get("TEST_DATA", BASE), "images")

def upload(store, source):
    name = os.path.basename(source)

    # Compress the image
    compressed = source + ".xz"
    with open(compressed, "w") as fp:
        xz = [ "xz", "--force", "--keep", "--verbose", "--stdout", "--threads=0", source ]
        subprocess.check_call(xz, stdout=fp)

    # And upload the compressed version
    dest = os.path.join(store, name + ".xz")
    subprocess.check_call(["rsync", "--progress", compressed, dest])

    # Remove the compressed version
    os.unlink(compressed)

def main():
    parser = argparse.ArgumentParser(description='Upload virtual machine images')
    parser.add_argument("--store", default=UPLOAD, help="Where to send images")
    parser.add_argument('image', nargs='*')
    args = parser.parse_args()

    sources = []
    for image in args.image:
        link = os.path.join(IMAGES, image)
        if not os.path.islink(link):
            parser.error("image link does not exist: " + image)
        source = os.path.join(DATA, os.readlink(link))
        if not os.path.isfile(source):
            parser.error("image does not exist: " + image)
        sources.append(source)

    for source in sources:
        upload(args.store, source)

if __name__ == '__main__':
    sys.exit(main())
