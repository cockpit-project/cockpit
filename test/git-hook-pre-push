#!/bin/sh

set -eu

if [ -t 2 ]; then
    red="\e[1;31m"
    green="\e[1;32m"
    blue="\e[1;34m"
    grey="\e[0m"
else
    red=""
    green=""
    blue=""
    grey=""
fi

# checks a single commit (ref name in $1) for validity
check_commit() {
    tmpdir="tmp/pre-push/${commit}"
    rm -rf "tmp/pre-push/${commit}"

    # unpack all of the changed files, plus the test/static-code from that commit
    files="$(git show --format='' --name-only "${commit}" --) test/static-code"
    git archive --prefix="${tmpdir}/" "${commit}" -- ${files} | tar x

    # check that node_modules always gets updated with package.json
    if [ -e "${tmpdir}/package.json" -a ! -e "${tmpdir}/node_modules" ]; then
        echo 'not ok 0 /node-modules/update'
        echo '# package.json changed, but node_modules not updated'
    fi

    # if any of the following commands fail, the function
    # will abort, leaving the temp directory in place
    (
        cd "${tmpdir}"
        env -i git init -qb main .
        env -i git add .
        ! test/static-code | grep '^[#n]'
    )

    # paranoia: make sure we delete what we think we will
    rm -rf "tmp/pre-push/${commit}"
}

main() {
    nothing='0000000000000000000000000000000000000000'
    fail=''

    # cf. man 5 githooks
    # <local ref> SP <local object name> SP <remote ref> SP <remote object name> LF
    while read local_ref local_object_name remote_ref remote_object_name; do
        printf "${blue}Performing pre-push checks for %s:${grey}\n" "${remote_ref}" >&2

        if [ "${local_object_name}" = "${nothing}" ]; then
            # deleting remote ref: no checks
            continue
        fi

        if [ "${remote_object_name}" != "${nothing}" ]; then
            reference="${remote_object_name}"
        else
            reference="origin" # matches any branch on origin
        fi

        for commit in $(git rev-list "${local_object_name}" --not "${reference}"); do
            subject="$(git show --no-patch --format='%h %s' "${commit}" --)"
            out="$(check_commit "${commit}" | sed 's/^/    /')"

            if [ -n "${out}" ]; then
                fmt=" - ${red}%s${grey}:\n%s\n"
                fail=1
            else
                fmt=" - ${green}%s${grey}: ${green}pass${grey}%s\n"
            fi

            printf "${fmt}" "${subject}" "${out}" >&2
        done
    done

    exit "${fail:-0}"
}

main
