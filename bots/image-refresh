#!/usr/bin/python3
# -*- coding: utf-8 -*-

# This file is part of Cockpit.
#
# Copyright (C) 2016 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.

import os
import subprocess
import sys

import task
from task import github, REDHAT_STORE

TRIGGERS = {
    "centos-7": [
        "verify/centos-7"
    ],
    "continuous-atomic": [
        "verify/continuous-atomic"
    ],
    "debian-testing": [
        "verify/debian-testing"
    ],
    "debian-stable": [
        "verify/debian-stable"
    ],
    "fedora-29": [
        "verify/fedora-29",
        "verify/fedora-atomic",
        "selenium/chrome",
        "selenium/firefox",
        "selenium/edge",
        "avocado/fedora",
        "container/kubernetes",
        "container/bastion",
    ],
    "fedora-30": [
        "verify/fedora-30",
    ],
    "fedora-atomic": [
        "verify/fedora-atomic"
    ],
    "fedora-testing": [
        "verify/fedora-testing"
    ],
    "fedora-i386": [
        "verify/fedora-i386"
    ],
    "ubuntu-1804": [
        "verify/ubuntu-1804"
    ],
    "ubuntu-stable": [
        "verify/ubuntu-stable"
    ],
    "openshift": [
        "container/kubernetes",
        "verify/fedora-29",
        "verify/rhel-7-6"
    ],
    "ipa": [
        "verify/fedora-29",
        "verify/rhel-7-6",
        "verify/rhel-7-6-distropkg",
        "verify/ubuntu-1804",
        "verify/debian-stable"
    ],
    "rhel-7-6": [
        "verify/rhel-7-6",
        "verify/rhel-7-6-distropkg",
        "verify/rhel-atomic"  # builds in rhel-7-6
    ],
    "rhel-7-7": [
        "verify/rhel-7-7",
    ],
    "rhel-8-0": [
        "verify/rhel-8-0"
    ],
    "rhel-8-1": [
        "verify/rhel-8-1"
    ],
    "rhel-atomic": [
        "verify/rhel-atomic"
    ]
}

STORES = {
    "rhel-7-6": REDHAT_STORE,
    "rhel-7-7": REDHAT_STORE,
    "rhel-8-0": REDHAT_STORE,
    "rhel-8-1": REDHAT_STORE,
    "rhel-atomic": REDHAT_STORE,
    "windows-10": REDHAT_STORE,
}

BOTS = os.path.abspath(os.path.dirname(__file__))
BASE = os.path.normpath(os.path.join(BOTS, ".."))

sys.dont_write_bytecode = True

def run(image, verbose=False, **kwargs):
    if not image:
        raise RuntimeError("no image specified")

    triggers = TRIGGERS.get(image, [ ])
    store = STORES.get(image, None)

    # Cleanup any extraneous disk usage elsewhere
    subprocess.check_call([ os.path.join(BASE, "test", "vm-reset") ])

    cmd = [ os.path.join(BOTS, "image-create"), "--verbose", "--upload" ]
    if store:
        cmd += [ "--store", store ]
    cmd += [ image ]

    os.environ['VIRT_BUILDER_NO_CACHE'] = "yes"
    ret = subprocess.call(cmd)
    if ret:
        return ret

    branch = task.branch(image, "images: Update {0} image".format(image), pathspec="bots/images", **kwargs)
    if branch:
        pull = task.pull(branch, run_tests=False, **kwargs)

        # Trigger this pull request
        head = pull["head"]["sha"]
        api = github.GitHub()
        for trigger in triggers:
            api.post("statuses/{0}".format(head), { "state": "pending", "context": trigger,
                "description": github.NOT_TESTED_DIRECT })
        # pre-creating statuses circumvents tests-scan's detection of whether bots/ changed
        # we want to validate all image refreshes with external projects
        task.label(pull, ["test-external"])

if __name__ == '__main__':
    task.main(function=run, title="Refresh image [no-test]")
